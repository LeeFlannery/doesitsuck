@model DoesItSuck.Models.Review


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <h2>Tell us: Does It Suck?</h2>
        <div>
            @Html.LabelFor(model => model.Title)
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div>
            @Html.LabelFor(model => model.Body, new { @class = "bodyLabel" })
            @Html.EditorFor(model => model.Body)
            @Html.ValidationMessageFor(model => model.Body)
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.Category)
            </div>
            <div id="categories">
                @foreach (var value in Enum.GetValues(typeof(DoesItSuck.Models.Category)))
                {

                    @Html.RadioButtonFor(model => model.Category, value, new { id = value, @class = value + "_radio" })
                    @Html.Label(value.ToString(), new { @class = value + "_radio" })
                    <br />
                }
            </div>

        </div>
        <div>
            @Html.LabelFor(model => model.Rating)
            <span class="rating">
                @for (byte star = 5; star > 0; star--)
                {
                    <input type="radio" class="rating-input" id=@String.Format("{0}-{1}", "rating-input", star) name="Rating" value=@star>
                    <label for=@String.Format("{0}-{1}", "rating-input", star) class="rating-star"></label>
                }
            </span>
            @Html.ValidationMessageFor(model => model.Rating)
        </div>
        <div>
            @Html.LabelFor(model => model.Link)
            @Html.EditorFor(model => model.Link)
            @Html.ValidationMessageFor(model => model.Link)
        </div>

        <p>
            <input type="submit" class="submitLink" value="DO IT!" />
            @Html.ActionLink("be lame", "Index", null, new { @class = "cancelLink" })
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
